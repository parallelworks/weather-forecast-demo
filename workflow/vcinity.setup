#!/bin/bash
#===================================
# Wrapper to run the UFS SRW Docker
# container
#====================================

# Make mount point
export PW_STORAGE=/pw/storage
sudo mkdir -p $PW_STORAGE
sudo chmod a+rwx $PW_STORAGE

# Mount Vcinity parallel file system
echo "=======> Mounting VCINITY PARALLEL to AWS WEST <======="
#sudo mount -vvv -o sync,nolock,vers=4 54.241.247.242:/ultxvfs2 $PW_STORAGE
sudo mount -vvv -o nolock,vers=4 54.241.247.242:/ultxvfs2 $PW_STORAGE

#===============================================
# WORKING HERE!
#===============================================
# Create new ufs working dir from template
# Import the docker image from remote location
#===============================================

# HOST_TEMP_DIR matches mount point.  All
# input and output go to the mount.
# $DOCKER_TEMP_DIR is only used *inside*
# the container so it is automatically created
# with the --mount option.
export HOST_TEMP_DIR=$PW_STORAGE/ufs
export DOCKER_TEMP_DIR=/tmp/docker

# Move the config script into $HOST_TEMP_DIR -> will
# allow for quick changes to config to overwrite
# config in the container.
cp -f $1 $HOST_TEMP_DIR/config.sh

# Copy the workflow run script to the working directory
cp -f $2 $HOST_TEMP_DIR/workflow_script.sh

#sudo docker run --rm --mount "type=bind,source=${HOST_TEMP_DIR},target=${DOCKER_TEMP_DIR}" parallelworks/ufs-srweather-demo:v1.32cpu /bin/bash --login $DOCKER_TEMP_DIR/workflow_script.sh
sudo docker run --rm --mount "type=bind,source=${HOST_TEMP_DIR},target=${DOCKER_TEMP_DIR}" parallelworks/ufs-srweather-demo:v1.32cpu /bin/bash $DOCKER_TEMP_DIR/workflow_script.sh
